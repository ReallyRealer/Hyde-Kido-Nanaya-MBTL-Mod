__dofile__( "./data/_combase.txt" );
// chr003

//-------------------------------------------------------------
// com動作生成

local com = CCom(110); // COM用オブジェクト　最大数はできるだけギリギリに
com.SetGuardAvg( 40 ); // ガード確率

// 共通処理
AddBasicMove( com, {
	MoveFactor_Offence = 90, // 攻撃的な行動の発動率にかかる係数（50〜150が目安）
	MoveFactor_Diffence = 110, // 防御的な行動の発動率にかかる係数（50〜150が目安）
	
	Skill_GuardIrekomi = def_CN_Skill_236A, // ガードされたときに入れ込む必殺技
	Skill_HitIrekomi = def_CN_Skill_236A, // ヒットしたときに入れ込む必殺技
	Skill_Taiku = def_CN_Skill_623A, // 対空で使う必殺技
	Skill_Muteki = def_CN_Skill_623B, // 無敵技
	Skill_Kensei = def_CN_Skill_236B, // 牽制で使う必殺技
	SKill_TuigekiEx = def_CN_Skill_236EX, // 追撃で使うＥＸ必殺技
	
	Atk_Taiku = "B", // 対空で使う攻撃
	Atk_Tobikomi = "C", // 飛び込みからのジャンプ攻撃
	Atk_KenseiAir = "C", // 空中でけん制に使う攻撃
	Atk_Teida = "B", // 低空ダッシュからのジャンプ攻撃
	Atk_AirBackDashAtk = "B", // グラつぶし低空バックダッシュで使う攻撃
	
	Combo_Arenda = { recipe = [ "A",["A",40],"A" ] }, // A連打コン（浮かせまで）
	Combo_Brenda = { recipe = [ "B",["B",40],"B" ] }, // B連打コン（浮かせまで）
	Combo_Hiroi = { recipe = [ "B",["B",40],"623B" ] }, // 拾いコン
	Combo_Aerial = { recipe = [ "B",{rapid=1},"GuardEnd","C",["9jc",14],{dl=7},"B",{rapid=1},"C","A+D" ] }, // エリアルコン
	Combo_CroAKiso = { recipe=["2A","GuardEnd","2C","C",] }, // 基礎コン
	
	//-------キャラ固有の連携、コンボ--------
	//※UNIと違いヒット確認までの連携、ヒット後のコンボ、ガード時の連携に分けて記述する
	First_Seq = [ // First_Sequence 入れ込んでヒット確認する、ダッシュからの連携の始動　2~3ヒットくらいの連携を登録する
		{ // 連携
			xlen = 20000, // 発動距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "*A",{dl=7, random=4},"B",{dl=8, random=5},"C" ], fintag="renkei_1" },
				{ recipe=[ "*2A",{dl=7, random=4},"*2A",{dl=7, random=4},"2C" ], fintag="renkei_2" },
			],
		},
	], //First_Seq
	Kensei_Seq = [ // 牽制技からの連携の始動　2~3ヒットくらいの連携を登録する
		{ // 連携
			x_range = [0,35000], // 近距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "B",{dl=8, random=5},"C" ], fintag="renkei_1" },
			],
		},
		{ // 連携
			x_range = [32000,50000], // 近距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "C", ], fintag="renkei_1" },
				{ recipe=[ "2C", ], fintag="renkei_2" },
				{ recipe=[ "C", "236A"], fintag="Fin_EXAD" },
			],
		},
		{ // 連携
			x_range = [0,62000], // 近距離
			y_range = [20000,90000], // 相手が空中
			flag = ["DIFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "9", "B",{rapid=1},"C","GuardEnd",["9jc",14],{dl=7},"B",{rapid=1},"C","A+D" ],  },
				{ recipe=[ "8", "B",{rapid=1},"C","GuardEnd",["9jc",14],{dl=7},"B",{rapid=1},"C","A+D" ],  },
				{ recipe=[ "7", "B",{rapid=1},"C","GuardEnd",["9jc",14],{dl=7},"B",{rapid=1},"C","A+D" ],  },
			],
		},
		{ // 連携
			x_range = [25000,65000], // 近距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [3,4],
			// debug = 1,
			list = [
				{ recipe=[ "9","AirDash_F","B",{landwait=30},"*2A",{dl=4, random=4},"*2A",{dl=4, random=4},"2C" ], fintag="renkei_2" },
				{ recipe=[ "9","AirDash_F","C",{landwait=30},"*2B",{rapid=1},"2C" ], fintag="renkei_2" },
			],
		},
		{ // 連携
			x_range = [50000,80000], // 中距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "236A",] },
				{ recipe=[ "214B",] },
			],
		},
		{ // 連携
			x_range = [80000,120000], // 中距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "236B", {rapid=2}, ], fintag="Fin_EXAD" },
			],
		},
		{ // 連携
			x_range = [45000,70000], // 中距離
			y_range = [0,20000], // 相手の位置が高すぎるとダメ
			flag = ["MD","OFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "236A", {landwait=40},"MD", ], fintag="renkei_MD" },
			],
		},
		{ // 連携
			x_range = [55000,120000], // 中距離
			flag = ["DIFFENCE"],
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "9",{dl=7, random=3}, ["iC",30], ], fintag="renkei_land" },
				{ recipe=[ "8",{dl=7, random=3}, ["iC",30], ], fintag="renkei_land" },
				{ recipe=[ "7",{dl=7, random=3}, ["iC",30], ], fintag="renkei_land" },
				{ recipe=[ "9",{dl=7, random=3},"7",{dl=9, random=3}, ["iC",30], ], fintag="renkei_land" },
				{ recipe=[ "7",{dl=7, random=3},{stick9=5},{dl=5, random=3}, ["iC",30], ], fintag="renkei_land" },
				{ recipe=[ "7",{dl=7, random=3},"AirDash_F", "C",{landwait=30}, "B","C" ], fintag="renkei_1" },
			],
		},
		{ // 連携
			x_range = [50000,80000], // 中距離
			y_range = [0,50000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			moon = 3000,
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "6BC",{rapid=1} ], fintag="Fin_6BC"},
			],
		},
		{ // 連携
			x_range = [30000,120000], // 遠距離
			y_range = [0,50000], // 相手の位置が高すぎるとダメ
			flag = ["OFFENCE"],
			moon = 3000,
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "4BC", ], },
			],
		},
		{ // 連携
			x_range = [30000,70000], // 中距離
			y_range = [0,35000],
			flag = ["DIFFENCE"],
			moon = 3000,
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "3BC",{irekomi=1},{nmcancelwait=60},], fintag="Fin_3BC" },
			],
		},
	], //Kensei_Seq
	Combo_Seq = [ // 連携がヒットした時のコンボ
		{ // 連携
			fintag = "renkei_1",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "2C","3C",{dl=20}, ], fintag="Fin_Aerial" },
			],
		},
		{ // 連携
			fintag = "renkei_2",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "C","3C",{dl=20}, ], fintag="Fin_Aerial" },
			],
		},
		{ // 連携
			fintag = "renkei_2",
			comlv = [4,4],
			// debug = 1,
			list = [
				{ recipe=[ "C",["214B",40],"B","9jc","iC",{dl=12},"B",{landwait=90},"B","3C",{dl=25},"B",{rapid=1},"C","A+D" ],  },
				{ recipe=[ "C",["214B",40],"B","9jc","iC",{dl=12},"B",{landwait=90},"B",["B",40],"214A", ], fintag="Fin_EXAD" },
			],
		},
		{ // 連携
			fintag = "renkei_land",
			x_range = [0,35000], // 相手の位置が遠すぎるとダメ
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {landwait=30}, "B",["B",40],"B",{dl=20} ], fintag="Fin_Aerial" },
			],
		},
		{ // 連携
			fintag = "renkei_MD",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {dl=20},"C","2C",["214B",40],"B","9jc","C","B",{rapid=1},"hjc","C","A+D" ], },
			],
		},
		{ // 連携
			fintag = "Fin_Skill",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ ["236A",40], ], fintag="Fin_EXAD" },
			],
		},
	], //Combo_Seq
	Guarded_Seq = [ // 連携がガードされた後の固め連携
		{ // 連携
			fintag = "renkei_1",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "2B", ],  }, // 出し切り
				{ recipe=[ "2B",{dl=10, random=14},"2C",{dl=10, random=14},"214A" ],  },
				{ recipe=[ "2B",{dl=10, random=14},"2C","2A" ],  },
				{ recipe=[ "2B",{dl=10, random=14},"2C","2A" ],  },
				{ recipe=[ "2C", ], fintag="Fin_Skill" },
			],
		},
		{ // 連携
			fintag = "renkei_2",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "C", ],  }, // 出し切り
				{ recipe=[ "iC" ],  },
				{ recipe=[ "C",{dl=5, random=10},"214A" ],  },
				{ recipe=[ "C","A" ],  },
				{ recipe=[ "C", ], fintag="Fin_Skill" },
				{ recipe=[ "C", ], fintag="Fin_Skill" },
			],
		},
		{ // 連携
			fintag = "renkei_land",
			x_range = [0,35000], // 相手の位置が遠すぎるとダメ
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {landwait=30}, "B",["B",40],"B" ], fintag="Fin_Skill" },
			],
		},
		{ // 連携
			fintag = "renkei_land",
			x_range = [35000,50000], // 相手の位置が遠すぎるとダメ
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {landwait=30}, "2C", ], fintag="renkei_2" },
			],
		},
		{ // 連携
			fintag = "renkei_MD",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {dl=20},"C", ], fintag="renkei_1" },
				{ recipe=[ {dl=20},"iC", ],  },
				{ recipe=[ {dl=24},{dash=10},"2A",{dl=7, random=4},"2A",{dl=7, random=4},"2C" ], fintag="renkei_2" },
			],
		},
		{ // 連携
			fintag = "Fin_Skill",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ {dl=10, random=10},"236A" ],  },
				{ recipe=[ {dl=10, random=10},"236B" ],  },
				{ recipe=[ {dl=10, random=10},"214A" ],  },
				{ recipe=[ {dl=10, random=10},"214B" ],  },
			],
		},
		{ // 連携
			fintag = "Fin_EXAD", // ガード時に入れ込む超技、ヒット分岐のためFinで始まる
			gauge = [99,0], // 1ゲージ必要
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "GuardEnd", ],  }, // EX技入れ込まないパターンもある
				{ recipe=[ "214EX" ],  },
			],
		},
		{ // 連携
			fintag = "Fin_3BC",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "7",{dl=3,random=5},"AirDash_B" ], },
			],
		},
	], //Guarded_Seq
	Follow_Seq = [ // 空振り後のフォロー
		{ // 連携
			fintag = "Fin_3BC",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "7",{dl=3,random=5},"AirDash_B" ], },
			],
		},
	], //Follow_Seq
	Finish_Seq = [ // コンボの〆
		{ // 連携
			fintag = "Fin_Aerial",
			comlv = [0,3],
			min_cp = 13,
			// debug = 1,
			list = [
				{ recipe = [ "B",{rapid=1},"C","A+D" ] },
			],
		},
		{ // 連携
			fintag = "Fin_Aerial",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe = [ "A+D" ] },
			],
		},
		{ // 連携
			fintag = "Fin_Aerial",
			comlv = [4,4],
			min_cp = 19,
			// debug = 1,
			list = [
				{ recipe = [ "B",{rapid=1},"GuardEnd","C",["9jc",14],{dl=7},"B",{rapid=1},"C","A+D" ] },
			],
		},
		{ // 連携
			fintag = "Fin_Aerial",
			comlv = [4,4],
			gauge = [99,0],
			// debug = 1,
			list = [
				{ recipe = [ "B",{rapid=1},"GuardEnd","C",["9jc",14],{dl=7},"B",{rapid=1},"C","J236EX" ] },
			],
		},
		{ // 連携
			fintag = "Fin_Skill",
			// debug = 1,
			list =
			[
				{ recipe=[ "22B" ],  },
			]
		},
		{ // 連携
			fintag = "Fin_EXAD",
			y_range = [0,10000], // 相手の位置が高すぎるとダメ
			gauge = [99,0], // 1ゲージ必要
			// debug = 1,
			list =
			[
				{ recipe=[ "236EX" ] },
				{ recipe=[ "214EX",{irekomi=60},{rapid=1}, "GuardEnd",{dl=20} ], fintag="Fin_Aerial" },
			]
		},
		{ // 連携
			fintag = "Fin_EXAD",
			x_range = [0,35000], // 相手の位置が遠すぎるとダメ
			gauge = [99,0], // 1ゲージ必要
			// debug = 1,
			list =
			[
				{ recipe=[ "623EX" ] },
			]
		},
		{ // 連携
			fintag = "Fin_EXAD",
			gauge = [300,0], // 3ゲージ必要
			// debug = 1,
			list =
			[
				{ recipe=[ "AD" ] },
			]
		},
		{ // 連携
			fintag = "Fin_3BC",
			comlv = [0,4],
			// debug = 1,
			list = [
				{ recipe=[ "hjc","B",{rapid=1},"C","A+D" ], },
			],
		},
		{ // 連携
			fintag = "Fin_6BC",
			comlv = [4,4],
			// debug = 1,
			list = [
				{ recipe=[ {wait=40},"C",{dl=15},"2C",["214B",50],"B","9","C","B",{rapid=1},"hjc","B",{rapid=1},"C","A+D" ], },
			],
		},
	], //Finish_Seq
} );

local stmp = 0;
local mtmp = 0;
local nowskillnum = 100;

// 固有処理

{	// 空中必殺技をおもむろに出す
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	// stmp.SetFlags( _eComSkillType_NoInterrupt | _eComSkillType_Interrupt ); // どこでも割り込み仕様
	
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function() // チェック
	{
		local st = BCom.GetStatus();
		//print( format(" Len:%d, %d\n",st.GetELenX(), st.GetELenY() ))
		if( st.CheckPState( _eComState_Damage ) ) return 0; // 自分がやられ中はダメ
		if( st.GetELenX() > 30000 ) return 0; // 近くないとダメ
		if( st.CheckPosState( _PosState_Ground ) ) return 0; // 空中じゃないとだめ
		if( st.CheckPosState_Enemy( _PosState_Ground ) ) return 0; // 相手が地上のときはだめ
		if( st.GetELenY() >= 23000 ) return 0; // 大体同じ高さじゃないとだめ
		if( st.GetELenY() <= -23000 ) return 0; // 大体同じ高さじゃないとだめ
		if( Battle_Std.CheckEnemyisUkemi() ) return 0;//相手が受け身中は無効

		return com_frequency1; //com_frequency2; 当てるのがむずいので頻度少なめ
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		
		if( BCom.GetMoveTag() == "jp" ) // 
		{
			local next_ar = ["J236A","J236B"];
			local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
			
			// print("\n next:"+next);
			BCom.Move_Jump( next );
		}	
		return 1;
	}
	
	// 
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "J236A" );
	mtmp.SetSpSkill( def_CN_Skill_J236A );
	mtmp.Set( 0, 0,  30, 0,  _eComMoveFlag_HitEnd|_eComMoveFlag_GroundEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "J236B" );
	mtmp.SetSpSkill( def_CN_Skill_J236B );
	mtmp.Set( 0, 0,  30, 0,  _eComMoveFlag_HitEnd|_eComMoveFlag_GroundEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
}

{	// AD使用後のみ22系必殺技を使う
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function() // チェック
	{
		local st = BCom.GetStatus();
		//print( format(" Len:%d, %d\n",st.GetELenX(), st.GetELenY() ))
		if( !st.IsPMoveable() ) return 0; // 行動可能じゃないとダメ
		if( !Battle_Std.Chr_Shi.UsableAddMoves() ) return 0;
		if( st.GetELenX() > 70000 ) return 0; // それなりに近くないとダメ
		if( st.CheckPosState( _PosState_Air ) ) return 0; // 地上じゃないとだめ
		if( st.GetELenY() >= 23000 ) return 0; // 大体同じ高さじゃないとだめ
		if( Battle_Std.CheckEnemyisUkemi() ) return 0;//相手が受け身中は無効

		return com_frequency4;
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		
		if( BCom.GetMoveTag() == "jp" ) // 
		{
			
			local next_ar = ["22A","22B","22C"];
			if( Battle_Std.MoonIcon_CheckCost( 3000 ) ) next_ar = ["22A","22B","22C","2BC"];
			local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
			
			// print("\n next:"+next);
			BCom.Move_Jump( next );
		}	
		return 1;
	}
	
	// 
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "22A" );
	mtmp.SetSpSkill( def_CN_Skill_0202A );
	mtmp.Set( 0, 0,  30, 0,  _eComMoveFlag_HitEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "22B" );
	mtmp.SetSpSkill( def_CN_Skill_0202B );
	mtmp.Set( 0, 0,  30, 0,  _eComMoveFlag_HitEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "22C" );
	mtmp.SetSpSkill( def_CN_Skill_0202C );
	mtmp.Set( 6, 0,  30, 0,  _eComMoveFlag_StickHold|_eComMoveFlag_HitEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
	
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "2BC" );
	mtmp.SetSpSkill( def_CN_Skill_0202BC );
	mtmp.Set( 6, 0,  30, 0,  _eComMoveFlag_StickHold|_eComMoveFlag_HitEnd|_eComMoveFlag_ThroughEnd| _eComMoveFlag_MoveEnd );
	
}
// 最後にglobal_com_tmpへ渡す
ComBase_GlobalComTmp_Set( com );

print("\n\n>com Loaded<\n")

