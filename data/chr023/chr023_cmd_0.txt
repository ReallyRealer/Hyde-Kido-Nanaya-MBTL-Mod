//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[HYD_CommandTable]");

local t =
{
	Skill_LastArcBlast = {},
	// Skill.LastArc = {},
	Skill_41236SP = 
	{
		command = ["41236+D"],
	},

	// Veil Bringer
	Skill_63214EX = 
	{
		command = [Def_CMD_236BC]
		CmdCheck = 
		{
			SkillType = "SpSpecial",
			Cost = { ComboGauge = 10000 },
		}
	},
	
	
	Skill_236EX = { CmdCheck = { BallLimit = { [6] = 1 } } },
	Skill_236BorC = { CmdCheck = { BallLimit = { [6] = 1 } } },
	Skill_236A = { CmdCheck = { BallLimit = { [6] = 1 } } },

	// 行動可能時（空振り）とかで出せる派生
	Skill_236_236A =
	{
		num = def_CN_Skill_AddCommand1,
		command = Def_CMD_236A,
		CmdCheck =
		{
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		}
		UpdateTable = { name = "Mv_Skill_236_236A", }
	},

	// モーション中に出す追加派生
	Skill_236_236A_ADD =
	{
		num = def_CN_Skill_AddCommand2,
		command = [Def_CMD_236A,"6+A"],
		function CmdBeforeFunc()
		{
			//FrameIDが20　か　飛び道具がヒットしてれば追加は出せる
			local mvs = BMvTbl.GetMvStatus();
			local hs = BMvTbl.GetMvHitStatus();
			if( mvs.FrameID!=20 && !(hs.Type & _HitType_Hit) ) return 0;
			
			//ダッシュとか出そうとして漏れるのを対応
			local cmd_spos = BCMDTbl.GetSuccessButtonPos();
			if( cmd_spos >= 1 )
			{
				if( mvs.FrameID == 0 )
				{
					return 0;
				}
			}
			
			return 1;
		},
		CmdCheck =
		{
			SkillType = "AddCommand",
			MvCheck = { Only = ["Mv_Skill_236A","Mv_Skill_236B"] },
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		}	
		UpdateTable = { name = "Mv_Skill_236_236A", }
	},	
	
	Skill_236_236B =
	{
		num = def_CN_Skill_AddCommand9,
		command = [Def_CMD_236B,Def_CMD_236C],
		CmdCheck = 
		{
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		},
		UpdateTable = { name = "Mv_Skill_236_236B", }
	},	
	
	Skill_236_236B_ADD =
	{
		num = def_CN_Skill_AddCommand10,
		command = [Def_CMD_236B,Def_CMD_236C,"6+B","6+C"],
		function CmdBeforeFunc()
		{
			//FrameIDが20　か　飛び道具がヒットしてれば追加は出せる
			local mvs = BMvTbl.GetMvStatus();
			local hs = BMvTbl.GetMvHitStatus();
			if( mvs.FrameID!=20 && !(hs.Type & _HitType_Hit) ) return 0;
			
			//ダッシュとか出そうとして漏れるのを対応
			local cmd_spos = BCMDTbl.GetSuccessButtonPos();
			if( cmd_spos >= 2 )
			{
				if( mvs.FrameID == 0 )
				{
					return 0;
				}
			}
			
			return 1;
		},		
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_236A","Mv_Skill_236B"] },
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		},
		UpdateTable = { name = "Mv_Skill_236_236B", }
	},
	
	Skill_236_236EX =
	{
		num = def_CN_Skill_AddCommand7,
		usegauge = 10000,
		command = ["646C@N,255@",Def_CMD_236C],
		CmdCheck = 
		{
			SkillType = "ExSpecial",
			Cost = { ComboGauge = 10000 },
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		},
		UpdateTable = { name = "Mv_Skill_236_236EX", }
	},	
	
	// モーション中に出す追加派生
	Skill_236_236EX_ADD =
	{
		num = def_CN_Skill_AddCommand8,
		usegauge = 10000,
		command = ["46C@N,255@",Def_CMD_236C],
		function CmdBeforeFunc()
		{
			//FrameIDが20　か　飛び道具がヒットしてれば追加は出せる
			local mvs = BMvTbl.GetMvStatus();
			local hs = BMvTbl.GetMvHitStatus();
			if( mvs.FrameID!=20 && !(hs.Type & _HitType_Hit) ) return 0;
			return 1;
		},		
		CmdCheck = 
		{
			SkillType = "AddCommand",
			Cost = { ComboGauge = 10000 },
			MvCheck = { Only = ["Mv_Skill_236A","Mv_Skill_236B"] },
			BallCount = { [6] = 1 },
			BallLimit = { [7] = 1 }, //EX波動のときはでない
		},
		UpdateTable = { name = "Mv_Skill_236_236EX", }
	},	
	
	Skill_623EX = {},
	Skill_623BorC = {},
	Skill_623A = {},
	
	Skill_214EX = {},
	Skill_214BorC = {},
	Skill_214A = {},
	Skill_J214A = {},
	Skill_J214BorC = {},
	Skill_J214EX = {},
	
	Skill_214_JAdd1 = 
	{
		num = def_CN_Skill_AddCommand5,
		command = ["<+A","<+B","<+C"], posstatus = _PosState_Air,
		
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B", "Mv_Skill_J214A", "Mv_Skill_J214B",] },
			FrameIDCheck = { Only = 100 },
			PosState = "Air",
		},
		UpdateFrameID = 101,
		UpdateTable = { name = "Mv_Skill_214_JAdd1", },
	},
	Skill_214_JAdd2 = 
	{
		num = def_CN_Skill_AddCommand6,
		command = ["<+A","<+B","<+C"], posstatus = _PosState_Air,

		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_214_JAdd1"] },
			FrameIDCheck = { Only = 200 },
			PosState = "Air",
		},		
		UpdateFrameID = 201,
		UpdateTable = { name = "Mv_Skill_214_JAdd2", },
	},

	
	
	Skill_0202EX = {},	
	Skill_0202BorC = {},
	Skill_0202A = {},

	Skill_J236EX = {
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 2, 0 ) ) return 0;
			return 1;
		}
	},
	Skill_J236BorC = {
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 1, 0 ) ) return 0;
			return 1;
		}
	},
	Skill_J236A = {
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			return 1;
		}
	},
	
	Atk_Std6B = {},
	Atk_Cro3B = {},
	Atk_Std3C = {},
	Atk_Air6C = {},
	Atk_Air2C = {},
	
	Atk_StdBandC = {},
	Skill_0202BC = {},
	Skill_214BC = {},
	Skill_J214BC = {},
	Skill_236BC = {},
	
	Atk_Std6C = 
	{
		cmdtmplflags = Def_SCT_Common,
		num = def_CN_Atk_DashStdC_Normal, name = "Cmd_Atk_DashStdC_Normal", command = "6+C",
		CmdCheck = { SkillType = "Normal", ComboLimit = DEF_BS_CL_DASHSTDC, MvCheck = { Only = ["Mv_DashWait_F","Mv_Dash_F"] }, },
		flags = [ "lastdelay" ], //1F増加
		function CmdBeforeStdFunc()
		{
			if( Battle_Std.GS_CheckFlag( def_PP_GS_DashStickHoldEnd ) ) // ダッシュ中レバーを前要素から外した
			{
				return 0;
			}
			return 1;
		}
		UpdateTable = { name = "Mv_Atk_Std6C", }
	}
	
	Throw_A = {},
}


CHR023_CommandTable <- Battle_Std.MakeCommandTableUNI( { command=t } );

_dp(" -> Load OK");

